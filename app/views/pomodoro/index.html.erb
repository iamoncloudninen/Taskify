<div id="pomodoro-timer">
  <h1>ポモドーロタイマー</h1>
  <p id="timer">25:00</p>
  <div class="buttons">
    <button id="startButton" onclick="startTimer()">開始</button>
    <button id="stopButton" onclick="stopTimer()">ストップ</button>
    <button id="resetButton" onclick="resetTimer()">リセット</button>
  </div>
</div>
<script>
  let timer;
  let isRunning = false;
  let totalTime = 25 * 60;
  let currentTime = totalTime;
  let isBreakTime = false;
  let startTime;

  document.addEventListener("DOMContentLoaded", () => {
    loadTimerState();
    updateTimerDisplay();
    updateButtonState();
    if (isRunning) {
      resumeTimer();
    }
  });

  function startTimer() {
    if (!isRunning) {
      isRunning = true;
      startTime = Date.now() - (totalTime - currentTime) * 1000;
      timer = setInterval(updateTimer, 1000);
      saveTimerState();
    }
    updateButtonState();
  }

  function stopTimer() {
    if (isRunning) {
      clearInterval(timer);
      isRunning = false;
      saveTimerState();
    }
    updateButtonState();
  }

  function resetTimer() {
    stopTimer();
    currentTime = totalTime = isBreakTime ? 5 * 60 : 25 * 60;
    saveTimerState();
    updateTimerDisplay();
    updateButtonState();
  }

  function updateTimer() {
    const elapsedTime = Math.floor((Date.now() - startTime) / 1000);
    currentTime = Math.max(totalTime - elapsedTime, 0);
    if (currentTime === 0) {
      clearInterval(timer);
      isRunning = false;
      handleTimerEnd();
    }
    updateTimerDisplay();
    saveTimerState();
  }

  function resumeTimer() {
    const savedState = JSON.parse(localStorage.getItem("pomodoroTimerState"));
    const elapsedTime = savedState.startTime ? Math.floor((Date.now() - savedState.startTime) / 1000) : 0;
    currentTime = Math.max(savedState.currentTime - elapsedTime, 0);
    totalTime = savedState.totalTime;
    isRunning = savedState.isRunning && currentTime > 0;
    isBreakTime = savedState.isBreakTime;
    if (isRunning) {
      startTime = Date.now() - elapsedTime * 1000;
      timer = setInterval(updateTimer, 1000);
    }
    updateTimerDisplay();
  }

  function handleTimerEnd() {
    isBreakTime = !isBreakTime;
    totalTime = isBreakTime ? 5 * 60 : 25 * 60;
    currentTime = totalTime;
    alert(isBreakTime ? "ポモドーロが終了しました！休憩をとりましょう！" : "休憩が終了しました！作業を再開しましょう！");
    startTimer();
  }

  function updateTimerDisplay() {
    const minutes = Math.floor(currentTime / 60);
    const seconds = currentTime % 60;
    document.getElementById("timer").innerText = `${minutes}:${seconds.toString().padStart(2, "0")}`;
  }

  function updateButtonState() {
    const startButton = document.getElementById("startButton");
    const stopButton = document.getElementById("stopButton");
    const resetButton = document.getElementById("resetButton");

    if (isRunning) {
      startButton.disabled = true;
      stopButton.disabled = false;
      resetButton.disabled = false;
    } else {
      if (currentTime === totalTime) {
        startButton.disabled = false;
        stopButton.disabled = true;
        resetButton.disabled = true;
      } else {
        startButton.disabled = false;
        stopButton.disabled = true;
        resetButton.disabled = false;
      }
    }
  }

  function saveTimerState() {
    localStorage.setItem("pomodoroTimerState", JSON.stringify({
      totalTime,
      currentTime,
      isRunning,
      isBreakTime,
      startTime: isRunning ? Date.now() - (totalTime - currentTime) * 1000 : null
    }));
  }

  function loadTimerState() {
    const savedState = JSON.parse(localStorage.getItem("pomodoroTimerState"));
    if (savedState) {
      const elapsedTime = savedState.startTime ? Math.floor((Date.now() - savedState.startTime) / 1000) : 0;
      totalTime = savedState.totalTime;
      currentTime = Math.max(savedState.currentTime - elapsedTime, 0);
      isRunning = savedState.isRunning && currentTime > 0;
      isBreakTime = savedState.isBreakTime;
      if (isRunning) {
        startTime = Date.now() - elapsedTime * 1000;
      }
    }
  }
</script>
